--------------------------------------------------------
--  Fichier créé - mardi-mars-14-2017   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence SEQNBEL
--------------------------------------------------------

   CREATE SEQUENCE  "SLBEJAOU"."SEQNBEL"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table APPIM
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."APPIM" 
   (	"ADI" VARCHAR2(50 BYTE), 
	"NAPR" NUMBER(2,0), 
	"OCCUP" VARCHAR2(20 BYTE), 
	"TYPEE" VARCHAR2(15 BYTE), 
	"SUPER" NUMBER(3,0), 
	"ETAGE" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLASSE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."CLASSE" 
   (	"NOMEC" VARCHAR2(20 BYTE), 
	"NCL" VARCHAR2(10 BYTE), 
	"MAITRE" VARCHAR2(20 BYTE), 
	"NBEL" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLASSEMENT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."CLASSEMENT" 
   (	"NUMETU" NUMBER(3,0), 
	"NOM" VARCHAR2(20 BYTE), 
	"MOYENNE" FLOAT(2), 
	"RANG" NUMBER(3,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLIENT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."CLIENT" 
   (	"NUMCLI" NUMBER, 
	"NOM" VARCHAR2(20 BYTE), 
	"PRENOM" VARCHAR2(20 BYTE), 
	"DATENAISS" DATE, 
	"CP" NUMBER(6,0), 
	"RUE" VARCHAR2(20 BYTE), 
	"VILLE" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COMMANDE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."COMMANDE" 
   (	"NUMCLI" NUMBER, 
	"NUMPROD" NUMBER, 
	"DATECMD" DATE, 
	"QTE" NUMBER, 
	"STATUT" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ECOLE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."ECOLE" 
   (	"NOMEC" VARCHAR2(20 BYTE), 
	"ADEC" VARCHAR2(50 BYTE), 
	"NBCLASSES" NUMBER(3,0), 
	"DIR" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table EMPLOYE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."EMPLOYE" 
   (	"MAT" NUMBER(2,0), 
	"ENAME" VARCHAR2(20 BYTE), 
	"SAL" NUMBER(5,0), 
	"DETNO" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ENFANT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."ENFANT" 
   (	"NOMP" VARCHAR2(20 BYTE), 
	"PRENOM" VARCHAR2(20 BYTE), 
	"AN" NUMBER(4,0), 
	"NOMEC" VARCHAR2(20 BYTE), 
	"NCL" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ETUDIANT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."ETUDIANT" 
   (	"NUMETU" NUMBER(3,0), 
	"NOM" VARCHAR2(20 BYTE), 
	"PRENOM" VARCHAR2(20 BYTE), 
	"DATENAISS" DATE, 
	"RUE" VARCHAR2(30 BYTE), 
	"CP" NUMBER(5,0), 
	"VILLE" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table FILIERE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."FILIERE" 
   (	"NUMFIL" NUMBER(38,0), 
	"INTITULE" VARCHAR2(50 BYTE), 
	"CAPACITE" NUMBER(38,0), 
	"NBREANNEES" NUMBER(38,0), 
	"NBRSTAGINSCRIT" NUMBER(38,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table IMMEUBLE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."IMMEUBLE" 
   (	"ADI" VARCHAR2(20 BYTE), 
	"NBETAGES" NUMBER(2,0), 
	"DATEC" DATE, 
	"PROP" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MATIERE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."MATIERE" 
   (	"CODEMAT" NUMBER(3,0), 
	"LIBELLE" VARCHAR2(20 BYTE), 
	"COEF" FLOAT(126)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table MODULE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."MODULE" 
   (	"NUMMOD" NUMBER(38,0), 
	"LIBELLE" VARCHAR2(50 BYTE), 
	"VOLUMEHOR" NUMBER(38,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table NOTATION
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."NOTATION" 
   (	"NUMNOTATION" NUMBER(38,0), 
	"NUMSTAG" NUMBER(38,0), 
	"NUMMOD" NUMBER(38,0), 
	"NOTE" NUMBER(38,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table NUMCLI
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."NUMCLI" 
   (	"COLUMN1" VARCHAR2(20 BYTE), 
	"COLUMN2" VARCHAR2(20 BYTE), 
	"COLUMN3" VARCHAR2(20 BYTE), 
	"COLUMN4" VARCHAR2(20 BYTE)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PERSONNE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."PERSONNE" 
   (	"NOM" VARCHAR2(20 BYTE), 
	"AGE" NUMBER(2,0), 
	"PROF" VARCHAR2(20 BYTE), 
	"ADR" VARCHAR2(50 BYTE), 
	"NAPR" NUMBER(2,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PRODUIT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."PRODUIT" 
   (	"NUMPROD" NUMBER(3,0), 
	"DESI" VARCHAR2(20 BYTE), 
	"PRIXUNI" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RESULTAT
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."RESULTAT" 
   (	"NUMETU" NUMBER(3,0), 
	"NOM" VARCHAR2(20 BYTE), 
	"CODEMAT" NUMBER(3,0), 
	"NOTEGLOB" FLOAT(2)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table STAGIAIRE
--------------------------------------------------------

  CREATE TABLE "SLBEJAOU"."STAGIAIRE" 
   (	"NUMSTAG" NUMBER(38,0), 
	"NOM" VARCHAR2(30 BYTE), 
	"PRENOM" VARCHAR2(30 BYTE), 
	"DATENAISS" DATE, 
	"DATEINSCRI" DATE, 
	"ADRESSE" VARCHAR2(200 BYTE), 
	"TEL" NUMBER(10,0), 
	"FILIERE" NUMBER(38,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for View CLIENTSPARISIENS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."CLIENTSPARISIENS" ("NUMCLI", "NOM", "PRENOM", "DATENAISS", "CP", "RUE", "VILLE") AS 
  select "NUMCLI","NOM","PRENOM","DATENAISS","CP","RUE","VILLE"
  from Client
  where Ville = 'Paris';
--------------------------------------------------------
--  DDL for View CLIENTSPARISIENSPRODUITS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."CLIENTSPARISIENSPRODUITS" ("NUMCLI", "NOM", "PRENOM", "NUMPROD", "DESI", "PRIXUNI") AS 
  select cp.NumCli, cp.Nom, cp.Prenom, P.NumProd, P.Desi, P.PrixUni
  from Produit P, ClientsParisiens cpa , ClientsProduits cp
  where cp.NumCli=cpa.NumCli and cp.NumProd=P.NumProd;
--------------------------------------------------------
--  DDL for View CLIENTSPRODUITS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."CLIENTSPRODUITS" ("NUMCLI", "NOM", "PRENOM", "NUMPROD", "DESI", "PRIXUNI") AS 
  select C.NumCli, C.Nom, C.Prenom, P.NumProd, P.Desi, P.PrixUni
  from Produit P, Client C, Commande Co 
  where C.NumCli = Co.NumCli and P.NumProd = Co.NumProd;
--------------------------------------------------------
--  DDL for View COMMANDES_TRIÉES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."COMMANDES_TRIÉES" ("NUMCLI", "NUMPROD", "DATECMD", "STATUT") AS 
  select NumCli, NumProd, DateCmd, Statut
  from Commande 
  order by DateCmd, Statut
  with check option;
--------------------------------------------------------
--  DDL for View NB_CMD_STATUT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."NB_CMD_STATUT" ("STATUT", "NB_CMD") AS 
  select statut, count(*)
  from Commande
  group by statut;
--------------------------------------------------------
--  DDL for View PROD_CHERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."PROD_CHERS" ("NUMPROD", "DESI") AS 
  select NumProd, Desi
  from Produit
  where PrixUni > 100;
--------------------------------------------------------
--  DDL for View VENTES_VILLE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "SLBEJAOU"."VENTES_VILLE" ("VILLE", "TOTAL_VENTES") AS 
  select C.Ville, SUM(Co.qte*P.PrixUni)
   from Client C, Produit P, Commande Co
   where C.NumCli=Co.NumCli and P.NumProd=Co.NumProd
   group by C.Ville;
REM INSERTING into SLBEJAOU.APPIM
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.CLASSE
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.CLASSEMENT
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.CLIENT
SET DEFINE OFF;
Insert into SLBEJAOU.CLIENT (NUMCLI,NOM,PRENOM,DATENAISS,CP,RUE,VILLE) values ('1','jean
','pierre',to_date('20/01/00','DD/MM/RR'),'90000','rue des cocotier','Paris');
Insert into SLBEJAOU.CLIENT (NUMCLI,NOM,PRENOM,DATENAISS,CP,RUE,VILLE) values ('2','pierre','jean',to_date('25/01/00','DD/MM/RR'),'80000','rue des fleurs','Paris');
Insert into SLBEJAOU.CLIENT (NUMCLI,NOM,PRENOM,DATENAISS,CP,RUE,VILLE) values ('3','mohamed','ali',to_date('30/01/00','DD/MM/RR'),'70000','rue de paris','Lyon');
REM INSERTING into SLBEJAOU.COMMANDE
SET DEFINE OFF;
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('1','5',to_date('01/05/16','DD/MM/RR'),'5','valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('2','4',to_date('02/05/16','DD/MM/RR'),'10','valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('3','3',to_date('15/08/16','DD/MM/RR'),'30','valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('3','3',to_date('20/09/16','DD/MM/RR'),'10','invalide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('2','1',to_date('25/11/16','DD/MM/RR'),'1','valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('2','2',to_date('30/11/16','DD/MM/RR'),null,'valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('2','2',to_date('20/01/15','DD/MM/RR'),null,'valide');
Insert into SLBEJAOU.COMMANDE (NUMCLI,NUMPROD,DATECMD,QTE,STATUT) values ('3','2',to_date('20/01/15','DD/MM/RR'),null,'valide');
REM INSERTING into SLBEJAOU.ECOLE
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.EMPLOYE
SET DEFINE OFF;
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('1','pierre','1000','2');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('2','jean','1500','2');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('3','mohamed','1300','2');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('4','jade','2000','2');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('5','anissa','1800','2');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('6','dupond','1100','5');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('7','jean pierre','2100','3');
Insert into SLBEJAOU.EMPLOYE (MAT,ENAME,SAL,DETNO) values ('8','anissa','1300','3');
REM INSERTING into SLBEJAOU.ENFANT
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.ETUDIANT
SET DEFINE OFF;
Insert into SLBEJAOU.ETUDIANT (NUMETU,NOM,PRENOM,DATENAISS,RUE,CP,VILLE) values ('1','abricot','dupond',to_date('10/10/00','DD/MM/RR'),'rue des abricots','9000','Paris');
Insert into SLBEJAOU.ETUDIANT (NUMETU,NOM,PRENOM,DATENAISS,RUE,CP,VILLE) values ('2','fraise','dupond',to_date('10/10/01','DD/MM/RR'),'rue des fraises','9001','Lyon');
Insert into SLBEJAOU.ETUDIANT (NUMETU,NOM,PRENOM,DATENAISS,RUE,CP,VILLE) values ('3','banane','dupond',to_date('10/10/02','DD/MM/RR'),'rue des bananes','9002','Marseille');
Insert into SLBEJAOU.ETUDIANT (NUMETU,NOM,PRENOM,DATENAISS,RUE,CP,VILLE) values ('4','pomme','dupond',to_date('10/10/03','DD/MM/RR'),'rue des pommes','9003','Paris');
Insert into SLBEJAOU.ETUDIANT (NUMETU,NOM,PRENOM,DATENAISS,RUE,CP,VILLE) values ('5','poire','dupond',to_date('10/10/04','DD/MM/RR'),'rue des poires','9004','Paris');
REM INSERTING into SLBEJAOU.FILIERE
SET DEFINE OFF;
Insert into SLBEJAOU.FILIERE (NUMFIL,INTITULE,CAPACITE,NBREANNEES,NBRSTAGINSCRIT) values ('1','S','20','3','15');
Insert into SLBEJAOU.FILIERE (NUMFIL,INTITULE,CAPACITE,NBREANNEES,NBRSTAGINSCRIT) values ('2','SI','20','3','18');
Insert into SLBEJAOU.FILIERE (NUMFIL,INTITULE,CAPACITE,NBREANNEES,NBRSTAGINSCRIT) values ('3','PRO','25','5','10');
Insert into SLBEJAOU.FILIERE (NUMFIL,INTITULE,CAPACITE,NBREANNEES,NBRSTAGINSCRIT) values ('4','PROS','25','5','10');
REM INSERTING into SLBEJAOU.IMMEUBLE
SET DEFINE OFF;
Insert into SLBEJAOU.IMMEUBLE (ADI,NBETAGES,DATEC,PROP) values ('3 rue adresse','6',to_date('11/11/11','DD/MM/RR'),null);
REM INSERTING into SLBEJAOU.MATIERE
SET DEFINE OFF;
Insert into SLBEJAOU.MATIERE (CODEMAT,LIBELLE,COEF) values ('1','math','3');
Insert into SLBEJAOU.MATIERE (CODEMAT,LIBELLE,COEF) values ('2','anglais','2');
Insert into SLBEJAOU.MATIERE (CODEMAT,LIBELLE,COEF) values ('3','francais','1');
REM INSERTING into SLBEJAOU.MODULE
SET DEFINE OFF;
Insert into SLBEJAOU.MODULE (NUMMOD,LIBELLE,VOLUMEHOR) values ('1','mathematique','300');
Insert into SLBEJAOU.MODULE (NUMMOD,LIBELLE,VOLUMEHOR) values ('2','informatique','250');
Insert into SLBEJAOU.MODULE (NUMMOD,LIBELLE,VOLUMEHOR) values ('3','metier et formation','100');
REM INSERTING into SLBEJAOU.NOTATION
SET DEFINE OFF;
Insert into SLBEJAOU.NOTATION (NUMNOTATION,NUMSTAG,NUMMOD,NOTE) values ('1','1','1','10');
Insert into SLBEJAOU.NOTATION (NUMNOTATION,NUMSTAG,NUMMOD,NOTE) values ('2','2','1','15');
Insert into SLBEJAOU.NOTATION (NUMNOTATION,NUMSTAG,NUMMOD,NOTE) values ('3','3','2','13');
Insert into SLBEJAOU.NOTATION (NUMNOTATION,NUMSTAG,NUMMOD,NOTE) values ('4','1','3','19');
Insert into SLBEJAOU.NOTATION (NUMNOTATION,NUMSTAG,NUMMOD,NOTE) values ('5','2','3','15');
REM INSERTING into SLBEJAOU.NUMCLI
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.PERSONNE
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.PRODUIT
SET DEFINE OFF;
Insert into SLBEJAOU.PRODUIT (NUMPROD,DESI,PRIXUNI) values ('1','stylo','1');
Insert into SLBEJAOU.PRODUIT (NUMPROD,DESI,PRIXUNI) values ('2','gomme','2');
Insert into SLBEJAOU.PRODUIT (NUMPROD,DESI,PRIXUNI) values ('3','compas','10');
Insert into SLBEJAOU.PRODUIT (NUMPROD,DESI,PRIXUNI) values ('4','crayon','1');
Insert into SLBEJAOU.PRODUIT (NUMPROD,DESI,PRIXUNI) values ('5','regle','5');
REM INSERTING into SLBEJAOU.RESULTAT
SET DEFINE OFF;
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('5','poire',null,'0');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('4','pomme',null,'0');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('5','poire',null,'0');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('4','pomme',null,'0');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('1','abricot','1','10');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('1','abricot','2','10');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('1','abricot','3','10');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('2','fraise','1','10');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('2','fraise','2','20');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('2','fraise','3','10');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('3','banane','1','20');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('3','banane','2','9');
Insert into SLBEJAOU.RESULTAT (NUMETU,NOM,CODEMAT,NOTEGLOB) values ('3','banane','3','10');
REM INSERTING into SLBEJAOU.STAGIAIRE
SET DEFINE OFF;
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('1','toto','toto',to_date('10/10/95','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue toto','102010245','1');
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('2','titi','titi',to_date('10/10/00','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue titi','102030405','1');
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('3','tata','tata',to_date('10/10/95','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue tata','102031005','2');
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('4','tutu','tutu',to_date('10/10/93','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue tutu','203230405','3');
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('5','tyty','tyty',to_date('10/10/98','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue tyty','22030405','3');
Insert into SLBEJAOU.STAGIAIRE (NUMSTAG,NOM,PRENOM,DATENAISS,DATEINSCRI,ADRESSE,TEL,FILIERE) values ('6','tete','tyty',to_date('10/10/98','DD/MM/RR'),to_date('10/10/10','DD/MM/RR'),'rue tyty','22030405','4');
REM INSERTING into SLBEJAOU.CLIENTSPARISIENS
SET DEFINE OFF;
Insert into SLBEJAOU.CLIENTSPARISIENS (NUMCLI,NOM,PRENOM,DATENAISS,CP,RUE,VILLE) values ('1','jean
','pierre',to_date('20/01/00','DD/MM/RR'),'90000','rue des cocotier','Paris');
Insert into SLBEJAOU.CLIENTSPARISIENS (NUMCLI,NOM,PRENOM,DATENAISS,CP,RUE,VILLE) values ('2','pierre','jean',to_date('25/01/00','DD/MM/RR'),'80000','rue des fleurs','Paris');
REM INSERTING into SLBEJAOU.CLIENTSPARISIENSPRODUITS
SET DEFINE OFF;
Insert into SLBEJAOU.CLIENTSPARISIENSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','1','stylo','1');
Insert into SLBEJAOU.CLIENTSPARISIENSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','2','gomme','2');
Insert into SLBEJAOU.CLIENTSPARISIENSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','2','gomme','2');
Insert into SLBEJAOU.CLIENTSPARISIENSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','4','crayon','1');
Insert into SLBEJAOU.CLIENTSPARISIENSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('1','jean
','pierre','5','regle','5');
REM INSERTING into SLBEJAOU.CLIENTSPRODUITS
SET DEFINE OFF;
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','1','stylo','1');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('3','mohamed','ali','2','gomme','2');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','2','gomme','2');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','2','gomme','2');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('3','mohamed','ali','3','compas','10');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('3','mohamed','ali','3','compas','10');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('2','pierre','jean','4','crayon','1');
Insert into SLBEJAOU.CLIENTSPRODUITS (NUMCLI,NOM,PRENOM,NUMPROD,DESI,PRIXUNI) values ('1','jean
','pierre','5','regle','5');
REM INSERTING into SLBEJAOU."COMMANDES_TRIÉES"
SET DEFINE OFF;
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('3','2',to_date('20/01/15','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('2','2',to_date('20/01/15','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('1','5',to_date('01/05/16','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('2','4',to_date('02/05/16','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('3','3',to_date('15/08/16','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('3','3',to_date('20/09/16','DD/MM/RR'),'invalide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('2','1',to_date('25/11/16','DD/MM/RR'),'valide');
Insert into SLBEJAOU."COMMANDES_TRIÉES" (NUMCLI,NUMPROD,DATECMD,STATUT) values ('2','2',to_date('30/11/16','DD/MM/RR'),'valide');
REM INSERTING into SLBEJAOU.NB_CMD_STATUT
SET DEFINE OFF;
Insert into SLBEJAOU.NB_CMD_STATUT (STATUT,NB_CMD) values ('valide','7');
Insert into SLBEJAOU.NB_CMD_STATUT (STATUT,NB_CMD) values ('invalide','1');
REM INSERTING into SLBEJAOU.PROD_CHERS
SET DEFINE OFF;
REM INSERTING into SLBEJAOU.VENTES_VILLE
SET DEFINE OFF;
Insert into SLBEJAOU.VENTES_VILLE (VILLE,TOTAL_VENTES) values ('Lyon','400');
Insert into SLBEJAOU.VENTES_VILLE (VILLE,TOTAL_VENTES) values ('Paris','36');
--------------------------------------------------------
--  DDL for Index NOTATION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."NOTATION_PK" ON "SLBEJAOU"."NOTATION" ("NUMNOTATION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index NUMCLI_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."NUMCLI_PK" ON "SLBEJAOU"."NUMCLI" ("COLUMN1") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_APPIM
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_APPIM" ON "SLBEJAOU"."APPIM" ("ADI", "NAPR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_CLASSE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_CLASSE" ON "SLBEJAOU"."CLASSE" ("NOMEC", "NCL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_COMMANDE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_COMMANDE" ON "SLBEJAOU"."COMMANDE" ("NUMCLI", "NUMPROD", "DATECMD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_ENFANT
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_ENFANT" ON "SLBEJAOU"."ENFANT" ("NOMP", "PRENOM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_FILIERE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_FILIERE" ON "SLBEJAOU"."FILIERE" ("NUMFIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_MODULE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_MODULE" ON "SLBEJAOU"."MODULE" ("NUMMOD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index PK_STAGIAIRE
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."PK_STAGIAIRE" ON "SLBEJAOU"."STAGIAIRE" ("NUMSTAG") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00444946
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00444946" ON "SLBEJAOU"."IMMEUBLE" ("ADI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00444948
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00444948" ON "SLBEJAOU"."PERSONNE" ("NOM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00444949
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00444949" ON "SLBEJAOU"."ECOLE" ("NOMEC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00445970
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00445970" ON "SLBEJAOU"."CLIENT" ("NUMCLI") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00445973
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00445973" ON "SLBEJAOU"."PRODUIT" ("NUMPROD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00447858
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00447858" ON "SLBEJAOU"."ETUDIANT" ("NUMETU") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C00447859
--------------------------------------------------------

  CREATE UNIQUE INDEX "SLBEJAOU"."SYS_C00447859" ON "SLBEJAOU"."MATIERE" ("CODEMAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table APPIM
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."APPIM" ADD CONSTRAINT "PK_APPIM" PRIMARY KEY ("ADI", "NAPR")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLASSE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."CLASSE" ADD CONSTRAINT "PK_CLASSE" PRIMARY KEY ("NOMEC", "NCL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CLIENT
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."CLIENT" MODIFY ("NOM" NOT NULL ENABLE);
 
  ALTER TABLE "SLBEJAOU"."CLIENT" MODIFY ("VILLE" NOT NULL ENABLE);
 
  ALTER TABLE "SLBEJAOU"."CLIENT" ADD PRIMARY KEY ("NUMCLI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table COMMANDE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."COMMANDE" ADD CONSTRAINT "PK_COMMANDE" PRIMARY KEY ("NUMCLI", "NUMPROD", "DATECMD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ECOLE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."ECOLE" ADD PRIMARY KEY ("NOMEC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ENFANT
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."ENFANT" ADD CONSTRAINT "PK_ENFANT" PRIMARY KEY ("NOMP", "PRENOM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SLBEJAOU"."ENFANT" MODIFY ("AN" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ETUDIANT
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."ETUDIANT" ADD PRIMARY KEY ("NUMETU")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table FILIERE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."FILIERE" ADD CONSTRAINT "PK_FILIERE" PRIMARY KEY ("NUMFIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SLBEJAOU"."FILIERE" MODIFY ("NUMFIL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table IMMEUBLE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."IMMEUBLE" ADD PRIMARY KEY ("ADI")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MATIERE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."MATIERE" ADD PRIMARY KEY ("CODEMAT")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table MODULE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."MODULE" ADD CONSTRAINT "PK_MODULE" PRIMARY KEY ("NUMMOD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NOTATION
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."NOTATION" ADD CONSTRAINT "NOTATION_PK" PRIMARY KEY ("NUMNOTATION")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NUMCLI
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."NUMCLI" ADD CONSTRAINT "NUMCLI_PK" PRIMARY KEY ("COLUMN1")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SLBEJAOU"."NUMCLI" MODIFY ("COLUMN1" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PERSONNE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."PERSONNE" ADD PRIMARY KEY ("NOM")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRODUIT
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."PRODUIT" MODIFY ("DESI" NOT NULL ENABLE);
 
  ALTER TABLE "SLBEJAOU"."PRODUIT" MODIFY ("PRIXUNI" NOT NULL ENABLE);
 
  ALTER TABLE "SLBEJAOU"."PRODUIT" ADD PRIMARY KEY ("NUMPROD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STAGIAIRE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."STAGIAIRE" ADD CONSTRAINT "PK_STAGIAIRE" PRIMARY KEY ("NUMSTAG")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT)
  TABLESPACE "USERS"  ENABLE;
 
  ALTER TABLE "SLBEJAOU"."STAGIAIRE" MODIFY ("NUMSTAG" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table APPIM
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."APPIM" ADD CONSTRAINT "FK_APPIM_ADI" FOREIGN KEY ("ADI")
	  REFERENCES "SLBEJAOU"."IMMEUBLE" ("ADI") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."APPIM" ADD CONSTRAINT "FK_APPIM_OCCUP" FOREIGN KEY ("OCCUP")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CLASSE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."CLASSE" ADD CONSTRAINT "FK_CLASSE_NOMEC" FOREIGN KEY ("NOMEC")
	  REFERENCES "SLBEJAOU"."ECOLE" ("NOMEC") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."CLASSE" ADD CONSTRAINT "FK_ECOLE_MAITRE" FOREIGN KEY ("MAITRE")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table COMMANDE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."COMMANDE" ADD CONSTRAINT "FK_COMMANDE_NUMCLI" FOREIGN KEY ("NUMCLI")
	  REFERENCES "SLBEJAOU"."CLIENT" ("NUMCLI") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."COMMANDE" ADD CONSTRAINT "FK_COMMANDE_NUMPROD" FOREIGN KEY ("NUMPROD")
	  REFERENCES "SLBEJAOU"."PRODUIT" ("NUMPROD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ECOLE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."ECOLE" ADD CONSTRAINT "FK_ECOLE_DIR" FOREIGN KEY ("DIR")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."ECOLE" ADD CONSTRAINT "FK_ECOLE_NOMEC" FOREIGN KEY ("NOMEC")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ENFANT
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."ENFANT" ADD CONSTRAINT "FK_ENFANT_NOMECNCL" FOREIGN KEY ("NOMEC", "NCL")
	  REFERENCES "SLBEJAOU"."CLASSE" ("NOMEC", "NCL") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."ENFANT" ADD CONSTRAINT "FK_ENFANT_NOMP" FOREIGN KEY ("NOMP")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table IMMEUBLE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."IMMEUBLE" ADD CONSTRAINT "FK_IMMEUBLE" FOREIGN KEY ("PROP")
	  REFERENCES "SLBEJAOU"."PERSONNE" ("NOM") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTATION
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."NOTATION" ADD CONSTRAINT "NOTATION_FK1" FOREIGN KEY ("NUMSTAG")
	  REFERENCES "SLBEJAOU"."STAGIAIRE" ("NUMSTAG") ENABLE;
 
  ALTER TABLE "SLBEJAOU"."NOTATION" ADD CONSTRAINT "NOTATION_FK2" FOREIGN KEY ("NUMMOD")
	  REFERENCES "SLBEJAOU"."MODULE" ("NUMMOD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PERSONNE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."PERSONNE" ADD CONSTRAINT "FK_PERSONNE_ADRNAPR" FOREIGN KEY ("ADR", "NAPR")
	  REFERENCES "SLBEJAOU"."APPIM" ("ADI", "NAPR") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table STAGIAIRE
--------------------------------------------------------

  ALTER TABLE "SLBEJAOU"."STAGIAIRE" ADD CONSTRAINT "FK_STAGIAIRE" FOREIGN KEY ("FILIERE")
	  REFERENCES "SLBEJAOU"."FILIERE" ("NUMFIL") ENABLE;
--------------------------------------------------------
--  DDL for Trigger INCR_NBSTAG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SLBEJAOU"."INCR_NBSTAG" after insert on Stagiaire
for each row
begin
   update filiere set NBRSTAGINSCRIT= NBRSTAGINSCRIT + 1;
   SYS.DBMS_OUTPUT.PUT_LINE('Les nombres de stagiaire inscrit dans cette filiere a été incrementé');
End;
/
ALTER TRIGGER "SLBEJAOU"."INCR_NBSTAG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MAJ_ETUDIANT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SLBEJAOU"."MAJ_ETUDIANT" before insert on Stagiaire
for each row
begin
   if filiere.capacite > filiere.nbrStagInscrits + 1 
   then 
    SYS.DBMS_OUTPUT.PUT_LINE('mise à jour du nombre etudiants ');
   Else 
    SYS.DBMS_OUTPUT.PUT_LINE('capacité maximale atteinte');
   END IF;  
End;
/
ALTER TRIGGER "SLBEJAOU"."MAJ_ETUDIANT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MAJ_MODULE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SLBEJAOU"."MAJ_MODULE" before update on Module
for each row
begin
   if :new.libelle != :old.libelle then 
    SYS.DBMS_OUTPUT.PUT_LINE('mise à jour du libellé');
   Else 
    SYS.DBMS_OUTPUT.PUT_LINE('le libellé existe deja');
   END IF;  
End;
/
ALTER TRIGGER "SLBEJAOU"."MAJ_MODULE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger VERIFNOTE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "SLBEJAOU"."VERIFNOTE" before insert on notation
for each row
 WHEN (new.note<0 or new.note>20) begin
  if :new.note<0 then
   :new.note:=0;
    SYS.DBMS_OUTPUT.PUT_LINE('la note insérée est 0');
  Elsif :new.note>20 then
    :new.note:=20;
   SYS.DBMS_OUTPUT.PUT_LINE('la note insérée est 20');
  END IF;  
End;
/
ALTER TRIGGER "SLBEJAOU"."VERIFNOTE" ENABLE;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet THSARTRE.NOUVEAU_STAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER THSARTRE.NOUVEAU_STAGIAIRE after insert on stagiaire
begin
  update filiere set nbrstaginscrits=nbrstaginscrits+1 where new.filiere=NUMFIL;
end;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet THSARTRE.VERIFNOTE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER THSARTRE.VERIFNOTE BEFORE INSERT ON notation 
FOR EACH ROW
WHEN (new.note<0 or new.note>20)
BEGIN
  if :new.note<0 then 
    :new.note:=0;
    SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 0');
  elsif :new.note>20 then 
    :new.note:=20;
  SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 20');
  END IF;
END;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet ALWALLOI.AUGMSTAGINSCRITS avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER ALWALLOI.AUGMSTAGINSCRITS 
after insert on stagiaire
for each row
begin
  update filiere set nbStagInscri = nbStagInscri + 1 where numFil = :new.numFil;
end;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet ALWALLOI.MAJMOD avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER ALWALLOI.MAJMOD 
before update of libelle on module
for each row
declare
  v_mod int := 0;
begin
  select sum(m.numMod) into v_mod from module m where m.libelle = :new.libelle;
  if v_mod <> 0 then
    raise_application_error(-20200, 'Libelle deja dans la base');
  end if;
end;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet ALWALLOI.VERIFNOTE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER ALWALLOI.VERIFNOTE 
before insert on notation
for each row
when(new.note < 0 or new.note > 20)
begin
  if :new.note < 0 then
    :new.note := 55;
    --insert into notation values (seq_notation.nextval, :new.numStag, :new.numMod, 0);
  end if;
  if :new.note > 20 then
    :new.note := 55;
    --insert into notation values (seq_notation.nextval, :new.numStag, :new.numMod, 20);
  end if;
  --raise_application_error(-20200, 'La note doit etre entre 0 et 20');
end;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet JECLEMEN.INCREMENTENBINSCRIT avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER JECLEMEN.INCREMENTENBINSCRIT AFTER INSERT ON STAGIAIRE
BEGIN
	UPDATE Filiere SET nbrStagInscrits = nbrStagInscrits + 1 WHERE numfil = filiere;
END;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet JECLEMEN.VERIFNOTE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER JECLEMEN.VERIFNOTE BEFORE INSERT ON NOTATION 
FOR EACH ROW
WHEN(new.note<0 or new.note>20)
BEGIN
	IF :new.note<0 then
		:new.note:= 0;
		SYS.DBMS_OUTPUT.PUT_LINE('La note inseree est 0');
	ELSIF :new.note>20 then
		:new.note:=20;
		SYS.DBMS_OUTPUT.PUT_LINE('La note inseree est 20');
	END IF;
END;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet OPLOPESD.NEW_STAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER OPLOPESD.NEW_STAGIAIRE BEFORE INSERT ON notation 
BEGIN
  UPDATE FILIERE SET nbrStagInscrits=NBRSTAGINSCRIT+1 WHERE :new.Numfil=NUMFIL;
END;
-- Impossible d'afficher le langage DDL TRIGGER pour l'objet OPLOPESD.VERIFNOTE avec DBMS_METADATA tentant le générateur interne.
CREATE TRIGGER OPLOPESD.VERIFNOTE BEFORE INSERT ON notation 
FOR EACH ROW
WHEN (new.note<0 or new.note>20)
BEGIN
  if :new.note<0 then 
    :new.note:=0;
    SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 0');
  elsif :new.note>20 then 
    :new.note:=20;
  SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 20');
  END IF;
END;
--------------------------------------------------------
--  DDL for Function MOYENNE
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "SLBEJAOU"."MOYENNE" (fil in number) return number is
moy number;
Begin
  select avg(note) into moy from notation nt, stagiaire s where nt.numstag=s.numstag and s.filiere=fil; 
  return moy;
End;

/
--------------------------------------------------------
--  DDL for Function MOYENNE_FIL
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "SLBEJAOU"."MOYENNE_FIL" (fil in number) return number AS 
moy number;
Begin
  select avg(note) into moy from notation N, stagiaire S where N.numstag=S.numstag and S.filiere=fil; 
  return moy;
  SYS.DBMS_OUTPUT.PUT_LINE(moy);
End;

/
--------------------------------------------------------
--  DDL for Function MOYENNE_NUMSTAG
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "SLBEJAOU"."MOYENNE_NUMSTAG" (Stag in number) return number AS 
moy number;
Begin
  select avg(note) into moy from notation N 
  where N.numstag=Stag; 
  return moy;
  SYS.DBMS_OUTPUT.PUT_LINE(moy);
End;

/
-- Impossible d'afficher le langage DDL FUNCTION pour l'objet THSARTRE.MOYENNE avec DBMS_METADATA tentant le générateur interne.
CREATE FUNCTION THSARTRE.MOYENNE (fil in number) return number is moy number;
BEGIN 
SELECT avg(note) INTO moy FROM NOTATION nt, stagiaire s WHERE nt.numstag=s.numstag AND s.filiere=fil;
RETURN moy;
END;
-- Impossible d'afficher le langage DDL FUNCTION pour l'objet ALWALLOI.MOYENNE avec DBMS_METADATA tentant le générateur interne.
CREATE FUNCTION ALWALLOI.MOYENNE (fil in int) return number
is
  moy int;
begin
  select avg(note) into moy from notation n, stagiaire s where n.numStag = s.numStag and s.numFil = fil;
  return moy;
end;
-- Impossible d'afficher le langage DDL FUNCTION pour l'objet ALWALLOI.SAL avec DBMS_METADATA tentant le générateur interne.
CREATE FUNCTION ALWALLOI.SAL 
return void;
declare 
  cursor cEmp is select sal from emp;
  vSal emp.sal%TYPE := 0;
  vSalT emp.sal%TYPE := 0;
begin
  open cEmp; loop
  fetch cEmp into vSalT;
    exit when cEmp%NOTFOUND;
    vSal := vSal + vSalT;  
  end loop; close cEmp; 
  dbms_output.put_line(vSal);
end;
-- Impossible d'afficher le langage DDL FUNCTION pour l'objet FLORIROY.FACTORIELLE_FONCTION avec DBMS_METADATA tentant le générateur interne.
CREATE FUNCTION FLORIROY.FACTORIELLE_FONCTION (facto IN NUMBER) RETURN NUMBER AS 
  x NUMBER(4):=1;
  som NUMBER(30):=1;
BEGIN
  WHILE (x<=facto) LOOP
      som := som*x;
      x := x+1;
    END LOOP;
    return som;
END FACTORIELLE_FONCTION;
-- Impossible d'afficher le langage DDL FUNCTION pour l'objet OPLOPESD.MOYENNE avec DBMS_METADATA tentant le générateur interne.
CREATE FUNCTION OPLOPESD.MOYENNE (fil in number) return number is moy number;
BEGIN 
SELECT avg(note) INTO moy FROM NOTATION nt, stagiaire s WHERE nt.numstag=s.numstag AND s.filiere=fil;
RETURN moy;
END;
--------------------------------------------------------
--  DDL for Procedure AFFICHERSTAG_DEUXNOTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."AFFICHERSTAG_DEUXNOTE" as
  CURSOR curs5 IS 
    SELECT count(N.NUMNOTATION) as nbNote, S.numStag, nom, prenom, datenaiss, dateinscri, adresse, tel, filiere
    FROM Stagiaire S, Notation N
    WHERE S.NumStag = N.numStag group by S.NUMSTAG, nom, prenom, datenaiss, dateinscri, 
adresse, tel, filiere;
Begin
    FOR cur IN curs5 LOOP
      if(cur.nbNote>1) then
      sys.dbms_output.put_line(cur.nbNote || ', ' ||cur.numStag || ', ' || cur.nom || ', ' || cur.prenom || ', ' || cur.datenaiss || ', ' || cur.dateinscri || ', ' || cur.adresse || ', ' || cur.tel || ', ' || cur.filiere);
      end if;
    END LOOP;
end;

/
--------------------------------------------------------
--  DDL for Procedure AUGMENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."AUGMENTE" IS
lib number;
BEGIN
  SELECT NumMod INTO lib FROM Module WHERE Libellé = 'Métier et Formation';
  UPDATE Notation SET Note = Note + 1 
  WHERE Notation.NumMod = lib; 
END;

/
--------------------------------------------------------
--  DDL for Procedure AUGMENTENOTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."AUGMENTENOTE" AS 
lib number;
BEGIN
  SELECT NumMod INTO lib FROM Module WHERE Libelle = 'metier et formation';
  UPDATE Notation SET Note = Note + 1 
  WHERE Notation.NumMod = lib; 
END;

/
--------------------------------------------------------
--  DDL for Procedure BULLETIN_STAG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."BULLETIN_STAG" (NumStag IN Number) AS 
  CURSOR curs4 IS 
    SELECT Stagiaire.nom, Notation.note
    FROM Notation, Stagiaire
    WHERE Stagiaire.NumStag = Notation.NumStag;
BEGIN 
   FOR cur IN curs4 LOOP
    sys.dbms_output.put_line(cur.nom || ', ' || cur.note);
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure LISTEAGE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTEAGE" (agemin in number, agemax in number) is
ageS number;
cursor liste is select * from Stagiaire;
Begin
  for cur in liste loop
    ageS :=to_char( sysdate , 'YYYY' ) - to_char( cur.datenaiss , 'YYYY' );
    if( ageS>=agemin and ageS<=agemax) then
       SYS.DBMS_OUTPUT.PUT_LINE(cur.NumStag||' , '||cur.nom||' ,  '||cur.prenom);
    End if;   
  End loop; 
End;

/
--------------------------------------------------------
--  DDL for Procedure LISTENOM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTENOM" (lettre in varchar2) as 

cursor c3 is 
  select distinct nom, prenom 
  from stagiaire
  where stagiaire.nom like '$Lettre%';
  
  cpt c3%rowtype;
Begin
   open c3;
  loop
    fetch c3 into cpt;
    exit when c3%notfound; 
      DBMS_OUTPUT.PUT_LINE('Nom :  ' || cpt.nom); -- DBMS_OUTPUT.PUT_LINE('cur.numStag||' , '||cur.nom)
      DBMS_OUTPUT.PUT_LINE('Prenom :  ' || cpt.prenom);
  end loop;
  close c3;
end;

/
--------------------------------------------------------
--  DDL for Procedure LISTER_STAGIAIRE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTER_STAGIAIRE" ( p_stagiaire in stagiaire.filiere%type) 
as
cursor c1 is
  --Lister les stagiaire d'une filiere
  select numStag, nom, prenom
  from stagiaire
  where filiere = p_stagiaire;
  
  cpt c1%rowtype;
  
begin
  
  open c1;
  loop
    fetch c1 into cpt;  -- 'for cur in c1 loop'
    exit when c1%notfound;
      DBMS_OUTPUT.PUT_LINE('Num :  ' || cpt.numStag);
      DBMS_OUTPUT.PUT_LINE('Nom :  ' || cpt.nom); -- DBMS_OUTPUT.PUT_LINE('cur.numStag||' , '||cur.nom)
      DBMS_OUTPUT.PUT_LINE('Prenom :  ' || cpt.prenom);
    end loop;
end;
close c1;

/
--------------------------------------------------------
--  DDL for Procedure LISTERSTAGIAIRE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTERSTAGIAIRE" ( p_stagiaire in stagiaire.filiere%type) 
as
cursor c1 is
  --Lister les stagiaire d'une filiere
  select numStag, nom, prenom
  from stagiaire
  where filiere = p_stagiaire;
  
  cpt c1%rowtype;
  
begin
  
  open c1;
  loop
    fetch c1 into cpt;  -- 'for cur in c1 loop'
    exit when c1%notfound;
      DBMS_OUTPUT.PUT_LINE('Num :  ' || cpt.numStag);
      DBMS_OUTPUT.PUT_LINE('Nom :  ' || cpt.nom); -- DBMS_OUTPUT.PUT_LINE('cur.numStag||' , '||cur.nom)
      DBMS_OUTPUT.PUT_LINE('Prenom :  ' || cpt.prenom);
    end loop;
    close c1;
end;

/
--------------------------------------------------------
--  DDL for Procedure LISTESTAG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTESTAG" ( fil in number) AS
cursor liste is 
  select distinct Numstag, nom, prenom
  from Stagiaire 
  where filiere=fil;
Begin
  for cur in liste loop
  SYS.DBMS_OUTPUT.PUT_LINE(cur.NumStag||' , '||cur.nom||' ,  '||cur.prenom);
End loop;  
End;

/
--------------------------------------------------------
--  DDL for Procedure LISTESTAGE_AGE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTESTAGE_AGE" (agemin IN number, agemax IN number) AS 
  CURSOR curs2 IS  
    SELECT DISTINCT * 
    FROM Stagiaire;
  age Number;
BEGIN 
  FOR cur IN curs2 LOOP
    age := to_char(sysdate, 'YYYY') - to_char(cur.datenaiss, 'YYYY');
    IF( age>=agemin AND age <= agemax)
    THEN
      sys.dbms_output.put_line(cur.nom || ', ' || cur.prenom);
    END IF;
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure LISTESTAG_NOM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."LISTESTAG_NOM" (lettre IN char) AS 
  CURSOR curs3 IS 
    SELECT DISTINCT nom, prenom 
    FROM Stagiaire
    WHERE nom LIKE lettre||'%';
BEGIN 
   FOR cur IN curs3 LOOP
    sys.dbms_output.put_line(cur.nom || ', ' || cur.prenom);
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure QUESTION_2
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."QUESTION_2" (Age1 IN Number, Age2 IN Number) IS
  CURSOR curs2 IS 
    SELECT DISTINCT * 
    FROM Stagiaire;
  Age Number;
BEGIN 
  FOR cur IN curs2 LOOP
    Age := to_char(sysdate, 'YYYY') - to_char(cur.datenaiss, 'YYYY');
    IF( Age>=Age1 AND Age <= Age2)
    THEN
      sys.dbms_output.put_line(cur.nom || ', ' || cur.prenom);
    END IF;
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure SUPPRIMEFILIERE_STAG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."SUPPRIMEFILIERE_STAG" (Fil IN Number) AS 
BEGIN
  DELETE FROM Stagiaire
  WHERE Filiere = Fil;
  DELETE FROM Filiere 
  WHERE NumFil = Fil;
END;

/
--------------------------------------------------------
--  DDL for Procedure TEST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."TEST" is
  ns number;
Begin
  select nom into ns from stagiaire where numstag=1;
  SYS.DBMS_OUTPUT.PUT_LINE(ns);
End;

/
--------------------------------------------------------
--  DDL for Procedure VOLUME_HORAIRE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."VOLUME_HORAIRE" (Stag IN Number) AS 
  CURSOR curs6 IS 
    SELECT sum(M.VOLUMEHOR) as nbHeure
    FROM Module M, Notation N
    WHERE M.NUMMOD=N.NUMMOD and N.NumStag = Stag;
BEGIN 
   FOR cur IN curs6 LOOP
    sys.dbms_output.put_line(cur.nbHeure);
  END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure VOLUME_HORRAIRE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SLBEJAOU"."VOLUME_HORRAIRE" (NumStag IN Number) AS 
  CURSOR curs6 IS 
    SELECT sum(volumeHor) as totalHoraire
    FROM Module M, Notation N
    WHERE M.NUMMOD=N.NUMMOD and N.NumStag = NumStag;
BEGIN 
   FOR cur IN curs6 LOOP
    sys.dbms_output.put_line(cur.totalHoraire);
  END LOOP;
END;

/
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet THSARTRE.AUGMENTATION avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE THSARTRE.AUGMENTATION IS
CURSOR aug IS
	SELECT nota.numnotation FROM NOTATION nota, MODULE modu WHERE modu.libelle = 'métier et formation' AND nota.nummod = modu.nummod;
BEGIN
	FOR tmp in aug LOOP
		UPDATE NOTATION SET note = note + 1 WHERE numnotation = tmp.numnotation;
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet THSARTRE.BULLETIN avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE THSARTRE.BULLETIN (numero in number)
is
cursor bul is select nota.note,modu.libelle from stagiaire stag,notation nota,module modu where stag.numstag=nota.numstag and modu.nummod=nota.nummod;
begin
for tmp in bul loop
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.libelle);
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.note);
end loop;
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet THSARTRE.LISTE_STAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE THSARTRE.LISTE_STAGIAIRE (numeroF in number)
is
cursor listetu is select stag.numstag,stag.nom,stag.prenom FROM STAGIAIRE stag where stag.filiere=numeroF;
begin
for tmp in listetu loop
DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end loop;
end;

execute liste_stagiaire(1);

create or replace procedure liste_stagiaire2 (age in number, age2 in number)
is 
cursor listetu2 is select stag.numstag,stag.nom,stag.prenom,stag.datenaiss from STAGIAIRE stag;
age3 number;
begin
for tmp in listetu2 loop
age3:=to_char(sysdate, 'YYYY') - to_char(tmp.datenaiss, 'YYYY');
if(age3>=age and age3<=age2) then
    SYS.DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end if;
end loop;
end;

execute liste_stagiaire2(1,30);


CREATE OR REPLACE PROCEDURE augmentation IS
CURSOR aug IS SELECT nota.numnotation FROM NOTATION nota, MODULE modu WHERE modu.libelle = 'métier et formation' AND nota.nummod = modu.nummod;
BEGIN
	FOR tmp in aug LOOP
		UPDATE NOTATION SET note = note + 1 WHERE numnotation = tmp.numnotation;
	END LOOP;
END;

execute augmentation();

create or replace procedure liste_stagiaire3(charac in char)
is
cursor listetu3 is select numstag,nom,prenom from stagiaire where nom like charac||'%';
begin
for tmp in listetu3 loop
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end loop;
end;

execute liste_stagiaire3('k');

create or replace procedure bulletin (numero in number)
is
cursor bul is select nota.note,modu.libelle from stagiaire stag,notation nota,module modu where stag.numstag=nota.numstag and modu.nummod=nota.nummod;
begin
for tmp in bul loop
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.libelle);
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.note);
end loop;
end;

execute bulletin(1);

CREATE OR REPLACE FUNCTION moyenne (fil in number) return number is moy number;
BEGIN 
SELECT avg(note) INTO moy FROM NOTATION nt, stagiaire s WHERE nt.numstag=s.numstag AND s.filiere=fil;
RETURN moy;
END;
SELECT moyenne(1) FROM dual;

CREATE OR REPLACE TRIGGER verifnote before INSERT  ON notation 
FOR EACH ROW
WHEN (new.note<0 or new.note>20)
BEGIN
  if :new.note<0 then :new.note:=0;
  end if;
  if :new.note>20 then :new.note:=20;
  end if;
end;

insert into notation values(2,1,2,21);
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet THSARTRE.LISTE_STAGIAIRE2 avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE THSARTRE.LISTE_STAGIAIRE2 (age in number, age2 in number)
is 
cursor listetu2 is select stag.numstag,stag.nom,stag.prenom,stag.datenaiss from STAGIAIRE stag;
age3 number;
begin
for tmp in listetu2 loop
age3:=to_char(sysdate, 'YYYY') - to_char(tmp.datenaiss, 'YYYY');
if(age3>=age and age3<=age2) then
    SYS.DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end if;
end loop;
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet THSARTRE.LISTE_STAGIAIRE3 avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE THSARTRE.LISTE_STAGIAIRE3 (charac in char)
is
cursor listetu3 is select numstag,nom,prenom from stagiaire where nom like charac||'%';
begin
for tmp in listetu3 loop
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end loop;
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.AUGMPOINT avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.AUGMPOINT 
is
  cursor cNote is select n.numNotation, n.note from notation n, module m where n.numMod = m.numMod and m.libelle = 'Metier et formation';
begin 
  for ele in cNote loop
    update notation set note = ele.note + 1 where numNotation = ele.numNotation;   
  end loop;  
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.AUGMPOINTUYR avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.AUGMPOINTUYR 
is
  cursor cNote is select n.numNotation, n.note from notation n, module m where n.numMod = m.numMod and m.libelle = 'Metier et formation';
begin 
  for ele in cNote loop
    update into notation set note = ele.note + 1 where numNotation = ele.numNotation;   
  end loop;  
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.LISTERSTAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.LISTERSTAGIAIRE (p_numFil in stagiaire.numFil%TYPE)
is 
  cursor cStagiaire is select s.nom, s.prenom from stagiaire s where s.numFil = p_numFil;
begin 
  for ele in cStagiaire loop
    dbms_output.put_line(ele.nom || ' ' || ele.prenom);
  end loop;  
end;

execute listerStagiaire(1);

-- 2

create or replace procedure listerStagiaireAge (p_ageMin in int, p_ageMax in int)
is 
  v_age int;
  cursor cStagiaire is select s.nom, s.prenom, s.dateNaiss from stagiaire s;
begin 
  for ele in cStagiaire loop
    v_age := to_char(sysdate, 'YYYY') - to_char(ele.dateNaiss, 'YYYY');
    if v_age < p_ageMax and v_age > p_ageMin then
      dbms_output.put_line(ele.nom || ' ' || ele.prenom);
    end if;    
  end loop;  
end;

execute listerStagiaireAge(0, 40);

-- 3

create or replace procedure augmPoint
is
  cursor cNote is select n.numNotation, n.note from notation n, module m where n.numMod = m.numMod and m.libelle = 'Metier et formation';
begin 
  for ele in cNote loop
    update notation set note = ele.note + 1 where numNotation = ele.numNotation;   
  end loop;  
end;

execute augmPoint;
select n.numNotation, n.note from notation n, module m where n.numMod = m.numMod ;

-- 8

create or replace function moyenne (fil in int) return number
is
  moy int;
begin
  select avg(note) into moy from notation n, stagiaire s where n.numStag = s.numStag and s.numFil = fil;
  return moy;
end;
select moyenne(1) from dual;

-- 1 Trigger

create or replace trigger verifNote
before update of note on notation
for each row
when(new.note < 0 or new.note > 20)
begin
  raise_application_error(-20200, 'La note doit etre entre 0 et 20');
end;

alter trigger verifNote enable;

insert into notation values (seq_notation.nextval, 2, 1, -25);
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.LISTERSTAGIAIREAGE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.LISTERSTAGIAIREAGE (p_ageMin in int, p_ageMax in int)
is 
  v_age int;
  cursor cStagiaire is select s.nom, s.prenom, s.dateNaiss from stagiaire s;
begin 
  for ele in cStagiaire loop
    v_age := to_char(sysdate, 'YYYY') - to_char(ele.dateNaiss, 'YYYY');
    if v_age < p_ageMax and v_age > p_ageMin then
      dbms_output.put_line(ele.nom || ' ' || ele.prenom);
    end if;    
  end loop;  
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.LISTERSTAGIERE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.LISTERSTAGIERE (p_numFil in stagiaire.numFil%TYPE)
is 
  cursor cStagiaire is select s.nom, s.prenom from stagiaire s where s.numFil = p_numFil;
begin 
  for ele in cStagiaire loop
    dbms_output.put_line(ele.nom || ' ' || ele.prenom);
  end loop;  
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet ALWALLOI.LISTERSTAGIEREAGE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE ALWALLOI.LISTERSTAGIEREAGE (p_age in int)
is 
  v_age int;
  cursor cStagiere is select s.nom, s.prenom, s.dateNaiss from stagiere s;
begin 
  for ele in cStagiere loop
    v_age := year(getdate() - year(ele.dateNaiss));
    if v_age < p_age then
      dbms_output.put_line(ele.nom || ' ' || ele.prenom);
    end if;    
  end loop;  
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.AFFICHERINFO avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.AFFICHERINFO IS
nom VARCHAR(20);
prenom VARCHAR(20);
CURSOR C9 IS
	SELECT numstag, COUNT(note) as nbnotes FROM NOTATION N GROUP BY numstag;
BEGIN
	FOR data in C9 LOOP
		IF(data.nbnotes>2) THEN 
			SELECT nom, prenom INTO nom, prenom FROM STAGIAIRE WHERE numstag = data.numstag;
			DBMS_OUTPUT.PUT_LINE(data.numstag || ', ' || nom || ', ' || prenom);
		END IF;
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.AFFICHERSTAGIAIRESAGE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.AFFICHERSTAGIAIRESAGE (agemin IN NUMBER, agemax IN NUMBER) IS
ageS number;
CURSOR c5 IS
	SELECT * FROM Stagiaire;
BEGIN
	FOR data IN c5 LOOP
		ageS :=to_char( SYSDATE , 'YYYY') - to_char(data.datenaiss, 'YYYY');
		if(ageS>=agemin AND ageS<=agemax) then
		DBMS_OUTPUT.PUT_LINE(data.numstag ||  data.nom ||  data.prenom);
    END IF;
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.AUGMENTERNOTEMF avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.AUGMENTERNOTEMF IS
CURSOR c6 IS
	SELECT N.numnotation FROM NOTATION N, MODULE M WHERE libelle = 'métier et formation' AND N.nummod = M.nummod;
BEGIN
	FOR data in c6 LOOP
		UPDATE NOTATION SET note = note + 1 WHERE numnotation = data.numnotation;
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.BULLETINNOTE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.BULLETINNOTE (numerostagiaire IN NUMBER) IS
CURSOR C8 IS
	SELECT libelle, note FROM MODULE M, NOTATION N WHERE N.numstag = numerostagiaire AND M.nummod = N.nummod;  
BEGIN
	FOR data in C8 LOOP
		DBMS_OUTPUT.PUT_LINE('Module : ' || data.libelle);
		DBMS_OUTPUT.PUT_LINE('Note : ' || data.note);
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.LISTERSTAGIAIRES avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.LISTERSTAGIAIRES (NumFil IN Number) IS
CURSOR c4 IS
		SELECT numstag, nom, prenom FROM Stagiaire WHERE Filiere = NumFil;
BEGIN
		FOR data IN c4 LOOP
			DBMS_OUTPUT.PUT_LINE(data.numstag || data.nom || data.prenom);
		END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.LISTERSTAGIAIRESNOM avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.LISTERSTAGIAIRESNOM (lettre IN VARCHAR) IS
CURSOR c4 IS
		SELECT numstag, nom, prenom FROM Stagiaire WHERE nom LIKE lettre||'%';
BEGIN
		FOR data IN c4 LOOP
			DBMS_OUTPUT.PUT_LINE(data.numstag || data.nom || data.prenom);
		END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet JECLEMEN.SUPPRIMERFILIERE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE JECLEMEN.SUPPRIMERFILIERE (numerofiliere IN NUMBER) IS
BEGIN
	DELETE FROM STAGIAIRE WHERE FILIERE = numerofiliere;
	DELETE FROM FILIERE WHERE numfil = numerofiliere;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet FLORIROY.FACTORIELLE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE FLORIROY.FACTORIELLE AS 
    x NUMBER(4):=1;
    facto NUMBER(4):=6;
    som NUMBER(30):=1;
BEGIN
   WHILE (x<=facto) LOOP
      som := som*x;
      x := x+1;
    END LOOP;
  dbms_output.put_line('fact('||TO_CHAR(facto)||')='||TO_CHAR(som));
  dbms_output.put_line('fonction res: fact('||TO_CHAR(facto)||')='||TO_CHAR(factorielle_fonction(facto)));
END FACTORIELLE;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet FLORIROY.PROC1_0 avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE FLORIROY.PROC1_0 as
v_lignes number(10);

 begin
  select count(*) into v_lignes from mg.prix;
  dbms_output.put_line('prix '||v_lignes);
  select count(*) into v_lignes from mg.piece;
  dbms_output.put_line('pieces '||v_lignes);
   select count(*) into v_lignes from mg.modele;
  dbms_output.put_line('modele '||v_lignes);
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet FLORIROY.QUESTION1 avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE FLORIROY.QUESTION1 AS
  cursor cur is Select raison, marque from prix order by raison,marque;
  /* question 3 */
  cursor cur1 is Select raison, marque, volume from METHODE_GROUP_BY order by raison,marque;
  cursor cur2 is Select raison, marque, volume from METHODE_CURSEUR order by raison,marque;
  /* question 2 */
  nb_l1 number;
  nb_l2 number;
  s_rm_moins1 cur%ROWTYPE;
    i number:=1;
  counter number:=0;

    /* question 3 */
  s_rm1 cur1%ROWTYPE;
  s_rm2 cur2%ROWTYPE;

  
BEGIN
  /* question 1 */
   DELETE from METHODE_GROUP_BY;
   DELETE from METHODE_CURSEUR;
   INSERT INTO METHODE_GROUP_BY
       Select raison, marque, count(*) as volume from prix group by raison, marque order by raison,marque;
   COMMIT;
   /* Question 2 */
      for s_rm in cur LOOP
        if counter=0 then
          i:=1;
          s_rm_moins1:=s_rm;
        else        
          if (s_rm.raison=s_rm_moins1.raison AND s_rm.marque=s_rm_moins1.marque) then
            i:= i+1;
          else 
             insert into METHODE_CURSEUR values (s_rm_moins1.raison,s_rm_moins1.marque,i);
             i :=1;
          end if;
       end if;
        counter:=counter+1;
        s_rm_moins1:=s_rm;
     END LOOP;
     insert into METHODE_CURSEUR values (s_rm_moins1.raison,s_rm_moins1.marque,i);
     Select count (*) into nb_l1 from METHODE_GROUP_BY;
     Select count (*) into nb_l2 from METHODE_CURSEUR;
     close cur;
    /* Question 3 */
     OPEN cur1;
     OPEN cur2;
     counter:=1;
     if(nb_l1=nb_l2) then
         LOOP
            FETCH cur1 into s_rm1;
            FETCH cur2 into s_rm2;
            EXIT WHEN (cur1%NOTFOUND OR cur2%NOTFOUND);
            if(s_rm1.marque!=s_rm2.marque OR s_rm1.raison !=s_rm2.raison OR s_rm1.volume!=s_rm2.volume) then
              dbms_output.put_line('Les tables sont différentes');
              counter:=0;
              EXIT;
            end if;
         END LOOP;
         if(counter=1) then
          dbms_output.put_line('Les tables sont identiques');
         end if;
      else
        dbms_output.put_line('Les tables sont différentes');
      end if;
      close cur1;
      close cur2;
END question1;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet OPLOPESD.AUGMENTATION avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE OPLOPESD.AUGMENTATION IS
CURSOR c6 IS
	SELECT N.numnotation FROM NOTATION N, MODULE M WHERE libelle = 'métier et formation' AND N.nummod = M.nummod;
BEGIN
	FOR data in c6 LOOP
		UPDATE NOTATION SET note = note + 1 WHERE numnotation = data.numnotation;
	END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet OPLOPESD.LISTE_AGE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE OPLOPESD.LISTE_AGE (agemin in number, agemax in number)
is ageS number;
cursor liste is select * FROM STAGIAIRE stag;
begin
for cur in liste loop
ageS:=to_char(sysdate, 'YYYY') - to_char(cur.datenaiss, 'YYYY');
if (ageS>=agemin and ageS<=agemax) 
  then DBMS_OUTPUT.PUT_LINE(cur.NumStag || ' ' || cur.nom || ' ' ||cur.prenom);
end if;
end loop;
end;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet OPLOPESD.LISTE_STAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE OPLOPESD.LISTE_STAGIAIRE (numeroF in number)
is
cursor listetu is select stag.NumStag,stag.nom,stag.prenom FROM STAGIAIRE stag where stag.filiere=numeroF;
begin
for tmp in listetu loop
DBMS_OUTPUT.PUT_LINE(tmp.numstag || ' ' || tmp.nom || ' ' || tmp.prenom);
end loop;
end;
execute liste_stagiaire(1);

/*Question 2*/
create or replace procedure liste_age (agemin in number, agemax in number)
is ageS number;
cursor liste is select * FROM STAGIAIRE stag;
begin
for cur in liste loop
ageS:=to_char(sysdate, 'YYYY') - to_char(cur.datenaiss, 'YYYY');
if (ageS>=agemin and ageS<=agemax) 
  then DBMS_OUTPUT.PUT_LINE(cur.NumStag || ' ' || cur.nom || ' ' ||cur.prenom);
end if;
end loop;
end;
execute liste_age(0,30);

/*Question 3*/
CREATE OR REPLACE PROCEDURE augmentation IS
CURSOR cur IS
	SELECT N.numnotation FROM NOTATION N, MODULE M WHERE libelle = 'métier et formation' AND N.nummod = M.nummod;
BEGIN
	FOR data in cur LOOP
		UPDATE NOTATION SET note = note + 1 WHERE numnotation = data.numnotation;
	END LOOP;
END;
execute augmentation();

/*Question 4*/
CREATE OR REPLACE PROCEDURE liste_stag_nom (carac in char)
IS
CURSOR c1 IS SELECT numstag,nom,prenom FROM STAGIAIRE WHERE nom LIKE carac||'%';
BEGIN
  FOR t in c1 LOOP
    SYS.DBMS_OUTPUT.PUT_LINE(t.NumStag || ' ' || t.nom || ' ' ||t.prenom);
  END LOOP;
END;

execute liste_stag_nom('e');

/*Question 5*/
create or replace procedure bulletin (numero in number)
is
cursor bul is select nota.note,modu.libelle from stagiaire stag,notation nota,module modu where stag.numstag=nota.numstag and modu.nummod=nota.nummod;
begin
for tmp in bul loop
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.libelle);
  SYS.DBMS_OUTPUT.PUT_LINE(tmp.note);
end loop;
end;

execute bulletin(1);

/*Question 8*/
CREATE OR REPLACE FUNCTION moyenne (fil in number) return number is moy number;
BEGIN 
SELECT avg(note) INTO moy FROM NOTATION nt, stagiaire s WHERE nt.numstag=s.numstag AND s.filiere=fil;
RETURN moy;
END;
SELECT moyenne(1) FROM dual;



/*TRIGGER*/
/*Question 1*/
CREATE OR REPLACE TRIGGER verifnote BEFORE INSERT ON notation 
FOR EACH ROW
WHEN (new.note<0 or new.note>20)
BEGIN
  if :new.note<0 then 
    :new.note:=0;
    SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 0');
  elsif :new.note>20 then 
    :new.note:=20;
  SYS.DBMS_OUTPUT.PUT_LINE('La note insérée est 20');
  END IF;
END;
INSERT INTO NOTATION VALUES (2,1,1,45);
INSERT INTO NOTATION VALUES (1,1,1,-85);
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet OPLOPESD.LISTE_STAG_NOM avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE OPLOPESD.LISTE_STAG_NOM (carac in char)
IS
CURSOR c1 IS SELECT numstag,nom,prenom FROM STAGIAIRE WHERE nom LIKE carac||'%';
BEGIN
  FOR t in c1 LOOP
    SYS.DBMS_OUTPUT.PUT_LINE(t.NumStag || ' ' || t.nom || ' ' ||t.prenom);
  END LOOP;
END;
-- Impossible d'afficher le langage DDL PROCEDURE pour l'objet OPLOPESD.LISTSTAGIAIRE avec DBMS_METADATA tentant le générateur interne.
CREATE PROCEDURE OPLOPESD.LISTSTAGIAIRE ( numeroF in STAGIAIRE.Filiere%Type)
IS
BEGIN
SELECT INTO NumStag, Nom, Prenom FROM STAGIAIRE WHERE filiere=numeroF;
END;
